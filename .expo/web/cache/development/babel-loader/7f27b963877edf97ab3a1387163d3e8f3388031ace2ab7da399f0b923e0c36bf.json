{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React from 'react';\nimport HomeScene from \"../Scene/HomeScene\";\nimport UserScene from \"../Scene/UserScene\";\nimport HappyScene from \"../Scene/HappyScene\";\nimport ModalScene from \"../Scene/ModalScene\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction HomeTabs() {\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScene\n    }), _jsx(Tab.Screen, {\n      name: \"User\",\n      component: UserScene\n    })]\n  });\n}\nvar Stack = createStackNavigator();\nfunction HappyStack() {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"Happy\",\n      component: HappyScene,\n      options: {\n        headerShown: false\n      }\n    })\n  });\n}\nvar AppStack = _jsxs(Stack.Navigator, {\n  screenOptions: {\n    headerShown: false\n  },\n  children: [_jsxs(Stack.Group, {\n    children: [_jsx(Stack.Screen, {\n      name: \"HomeTabs\",\n      component: HomeTabs\n    }), _jsx(Stack.Screen, {\n      name: \"Happy\",\n      component: HappyStack\n    })]\n  }), _jsx(Stack.Group, {\n    screenOptions: {\n      presentation: 'modal'\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"Modal\",\n      component: ModalScene\n    })\n  })]\n});\nvar Navigation = function Navigation() {\n  return _jsx(NavigationContainer, {\n    children: AppStack\n  });\n};\nexport default Navigation;","map":{"version":3,"names":["NavigationContainer","createBottomTabNavigator","createStackNavigator","React","HomeScene","UserScene","HappyScene","ModalScene","jsx","_jsx","jsxs","_jsxs","Tab","HomeTabs","Navigator","children","Screen","name","component","Stack","HappyStack","options","headerShown","AppStack","screenOptions","Group","presentation","Navigation"],"sources":["D:/ringo wokespace/react-native-isomorphism/navigation/Navigator.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n/// App导航路由栈\r\nimport React from 'react';\r\nimport HomeScene from '../Scene/HomeScene';\r\nimport UserScene from '../Scene/UserScene';\r\nimport HappyScene from '../Scene/HappyScene';\r\nimport ModalScene from '../Scene/ModalScene';\r\n\r\n\r\n\r\n\r\n// Tab Navigator\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction HomeTabs() {\r\n  return (\r\n    <Tab.Navigator>\r\n      <Tab.Screen name=\"Home\" component={HomeScene} />\r\n      <Tab.Screen name=\"User\" component={UserScene} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\n// Stack Navigators \r\nconst Stack = createStackNavigator();\r\n\r\nfunction HappyStack() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Happy\" component={HappyScene} options={{ headerShown: false }} />\r\n    </Stack.Navigator> \r\n  );\r\n}\r\n\r\nconst AppStack = (\r\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Group>\r\n        <Stack.Screen name=\"HomeTabs\" component={HomeTabs} />\r\n        <Stack.Screen name=\"Happy\" component={HappyStack} />\r\n      </Stack.Group>\r\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\r\n        <Stack.Screen name=\"Modal\" component={ModalScene} />  \r\n      </Stack.Group>    \r\n    </Stack.Navigator>\r\n) \r\nconst Navigation = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      {AppStack}\r\n    </NavigationContainer>\r\n  );\r\n}\r\nexport default Navigation;"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,oBAAoB,QAAQ,yBAAyB;AAE9D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS;AAChB,OAAOC,SAAS;AAChB,OAAOC,UAAU;AACjB,OAAOC,UAAU;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAM7C,IAAMC,GAAG,GAAGX,wBAAwB,CAAC,CAAC;AAEtC,SAASY,QAAQA,CAAA,EAAG;EAClB,OACEF,KAAA,CAACC,GAAG,CAACE,SAAS;IAAAC,QAAA,GACZN,IAAA,CAACG,GAAG,CAACI,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAEd;IAAU,CAAE,CAAC,EAChDK,IAAA,CAACG,GAAG,CAACI,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAEb;IAAU,CAAE,CAAC;EAAA,CACnC,CAAC;AAEpB;AAGA,IAAMc,KAAK,GAAGjB,oBAAoB,CAAC,CAAC;AAEpC,SAASkB,UAAUA,CAAA,EAAG;EACpB,OACEX,IAAA,CAACU,KAAK,CAACL,SAAS;IAAAC,QAAA,EACdN,IAAA,CAACU,KAAK,CAACH,MAAM;MAACC,IAAI,EAAC,OAAO;MAACC,SAAS,EAAEZ,UAAW;MAACe,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE,CAAE;EAAC,CACtE,CAAC;AAEtB;AAEA,IAAMC,QAAQ,GACZZ,KAAA,CAACQ,KAAK,CAACL,SAAS;EAACU,aAAa,EAAE;IAAEF,WAAW,EAAE;EAAM,CAAE;EAAAP,QAAA,GACnDJ,KAAA,CAACQ,KAAK,CAACM,KAAK;IAAAV,QAAA,GACVN,IAAA,CAACU,KAAK,CAACH,MAAM;MAACC,IAAI,EAAC,UAAU;MAACC,SAAS,EAAEL;IAAS,CAAE,CAAC,EACrDJ,IAAA,CAACU,KAAK,CAACH,MAAM;MAACC,IAAI,EAAC,OAAO;MAACC,SAAS,EAAEE;IAAW,CAAE,CAAC;EAAA,CACzC,CAAC,EACdX,IAAA,CAACU,KAAK,CAACM,KAAK;IAACD,aAAa,EAAE;MAAEE,YAAY,EAAE;IAAQ,CAAE;IAAAX,QAAA,EACpDN,IAAA,CAACU,KAAK,CAACH,MAAM;MAACC,IAAI,EAAC,OAAO;MAACC,SAAS,EAAEX;IAAW,CAAE;EAAC,CACzC,CAAC;AAAA,CACC,CACpB;AACD,IAAMoB,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,OACElB,IAAA,CAACT,mBAAmB;IAAAe,QAAA,EACjBQ;EAAQ,CACU,CAAC;AAE1B,CAAC;AACD,eAAeI,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}